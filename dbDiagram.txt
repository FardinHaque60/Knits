// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table user {
  userID varchar [primary key]
  password varchar
  role varchar
  email varchar
  phoneNumber varchar(10)
  bio text
  location varchar
  calendar integer
}

Table connections {
  followed_by varchar
  follows varchar
  connection_since timestamp 
  calendar_access boolean
}

Table message {
  messageID integer [primary key]
  userID integer 
  content text
  timestamp timestamp
  chat integer
}

Table chat {
  chatID integer [primary key]
  title varchar
}

Table chats_in {
  user varchar 
  chat integer
}

Table car {
  carID integer [primary key]
  driverID varchar
  seatsAvailable integer
}

Table passengers {
  passenger varchar
  car integer
}

Table post {
  postID integer [primary key]
  title varchar
  body text [note: 'Content of the post']
  author varchar
  likes integer [note: "likes are anonymous, user is not connected to likes"]
  created_at timestamp
}

Table comment {
  commentID integer [primary key]
  postID integer
}

Table calendar {
  calendarID integer [primary key]
  title varchar
}

Table access_to {
  user varchar
  calendar integer
}

Table block {
  blockID integer [primary key]
  name varchar
  calendar integer
  time varchar  [note: "represents the start and end time for a block"]
}

Table location {
  locationID integer [primary key]
  name varchar
  address varchar
}

Table review {
  reviewID integer [primary key]
  author varchar 
  location integer 
}

//user references
Ref: user.calendar - calendar.calendarID

//follow references
Ref: connections.followed_by <> user.userID 
Ref: connections.follows <> user.userID

//messages references
Ref: message.userID > user.userID
Ref: message.chat > chat.chatID

//car references
Ref: car.driverID > user.userID

//post references
Ref: post.author > user.userID

//comment references
Ref: comment.postID > post.postID

//chats_in referenences
Ref: chats_in.user <> user.userID
Ref: chats_in.chat <> chat.chatID

//passengers references
Ref: passengers.passenger <> user.userID
Ref: passengers.car <> car.carID

//reviews references
Ref: review.author > user.userID
Ref: review.location > location.locationID

//calendar references

//access_to references
Ref: access_to.user <> user.userID
Ref: access_to.calendar <> calendar.calendarID

//blocks references
Ref: block.calendar > calendar.calendarID